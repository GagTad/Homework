long substrCount(int n, string s) {
    long count = 0;

    
    vector<int> same_char_segments;
    int i = 0;
    while (i < n) {
        int char_count = 1;
        while (i + 1 < n && s[i] == s[i + 1]) {
            char_count++;
            i++;
        }
        same_char_segments.push_back(char_count);
        count += (char_count * (char_count + 1)) / 2;
        i++;
    }

   
    for (int j = 1; j < n - 1; j++) {
        if (s[j - 1] == s[j + 1] && s[j] != s[j - 1]) {
            
            int left = j - 1, right = j + 1;
            while (left >= 0 && right < n && s[left] == s[right] && s[left] == s[j - 1]) {
                count++;
                left--;
                right++;
            }
        }
    }

    return count;
}
